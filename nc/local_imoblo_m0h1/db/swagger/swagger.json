{"tags":[{"name":"Procedures","description":""},{"name":"Functions","description":""},{"name":"Admins","description":"Everything about your Admins"},{"name":"Banks","description":"Everything about your Banks"},{"name":"DeveloperLogs","description":"Everything about your DeveloperLogs"},{"name":"DeveloperStatuses","description":"Everything about your DeveloperStatuses"},{"name":"Developers","description":"Everything about your Developers"},{"name":"Images","description":"Everything about your Images"},{"name":"InvestmentLogs","description":"Everything about your InvestmentLogs"},{"name":"InvestmentStatuses","description":"Everything about your InvestmentStatuses"},{"name":"Investments","description":"Everything about your Investments"},{"name":"ProjectLogs","description":"Everything about your ProjectLogs"},{"name":"ProjectStatuses","description":"Everything about your ProjectStatuses"},{"name":"Projects","description":"Everything about your Projects"},{"name":"UserLogins","description":"Everything about your UserLogins"},{"name":"UserLogs","description":"Everything about your UserLogs"},{"name":"UserStatuses","description":"Everything about your UserStatuses"},{"name":"Users","description":"Everything about your Users"}],"paths":{"/nc/local_imoblo_m0h1/api/v1/Admins":{"post":{"tags":["Admins"],"summary":"Add a new Admins","description":"","operationId":"addAdmins","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Admins object that needs to add","required":true,"schema":{"$ref":"#/definitions/Admins"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["Admins"],"summary":"Get list","description":"","operationId":"getAdmins","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/AdminsNested"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Admins/{AdminsId}":{"get":{"tags":["Admins"],"summary":"Find Admins by ID","description":"Returns a single Admins","operationId":"getAdminsById","produces":["application/json"],"parameters":[{"name":"AdminsId","in":"path","description":"ID of Admins to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/AdminsNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Admins not found"}}},"put":{"tags":["Admins"],"summary":"Updates a Admins","description":"","operationId":"updateAdmins","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"AdminsId","in":"path","description":"ID of Admins to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"Admins object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Admins"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["Admins"],"summary":"Deletes a Admins","description":"","operationId":"deleteAdmins","produces":["application/json"],"parameters":[{"name":"AdminsId","in":"path","description":"ID of Admins to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Admins not found"}}}},"/nc/local_imoblo_m0h1/api/v1/Admins/bulk":{"post":{"tags":["Admins"],"summary":"Bulk Admins insert","description":"","operationId":"bulkAdminsInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Admins objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Admins"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["Admins"],"summary":"Updates a Admins","description":"","operationId":"updateAdmins","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Admins objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Admins"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["Admins"],"summary":"Deletes a Admins","description":"","operationId":"deleteAdmins","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Admins objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Admins"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Admins not found"}}}},"/nc/local_imoblo_m0h1/api/v1/Admins/findOne":{"get":{"tags":["Admins"],"summary":"Get first one from filtered data","description":"","operationId":"findOneAdmins","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Admins"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Admins/{AdminsId}/exists":{"get":{"tags":["Admins"],"summary":"Check Admins with provided ID exists","description":"Returns a single Admins","operationId":"checkAdminsExists","produces":["application/json"],"parameters":[{"name":"AdminsId","in":"path","description":"ID of Admins to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/local_imoblo_m0h1/api/v1/Admins/count":{"get":{"tags":["Admins"],"summary":"Get Admins count","operationId":"getAdminsCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Admins/groupby":{"get":{"tags":["Admins"],"summary":"Group by column","description":"","operationId":"AdminsGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Admins"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Admins/distribution":{"get":{"tags":["Admins"],"summary":"","description":"","operationId":"AdminsDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Admins/distinct":{"get":{"tags":["Admins"],"summary":"Get first one from filtered data","description":"","operationId":"AdminsDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Admins/aggregate":{"get":{"tags":["Admins"],"summary":"Get first one from filtered data","description":"","operationId":"AdminsAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Admins"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Banks":{"post":{"tags":["Banks"],"summary":"Add a new Banks","description":"","operationId":"addBanks","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Banks object that needs to add","required":true,"schema":{"$ref":"#/definitions/Banks"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["Banks"],"summary":"Get list","description":"","operationId":"getBanks","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/BanksNested"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Banks/{BanksId}":{"get":{"tags":["Banks"],"summary":"Find Banks by ID","description":"Returns a single Banks","operationId":"getBanksById","produces":["application/json"],"parameters":[{"name":"BanksId","in":"path","description":"ID of Banks to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/BanksNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Banks not found"}}},"put":{"tags":["Banks"],"summary":"Updates a Banks","description":"","operationId":"updateBanks","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"BanksId","in":"path","description":"ID of Banks to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"Banks object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Banks"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["Banks"],"summary":"Deletes a Banks","description":"","operationId":"deleteBanks","produces":["application/json"],"parameters":[{"name":"BanksId","in":"path","description":"ID of Banks to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Banks not found"}}}},"/nc/local_imoblo_m0h1/api/v1/Banks/bulk":{"post":{"tags":["Banks"],"summary":"Bulk Banks insert","description":"","operationId":"bulkBanksInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Banks objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Banks"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["Banks"],"summary":"Updates a Banks","description":"","operationId":"updateBanks","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Banks objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Banks"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["Banks"],"summary":"Deletes a Banks","description":"","operationId":"deleteBanks","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Banks objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Banks"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Banks not found"}}}},"/nc/local_imoblo_m0h1/api/v1/Banks/findOne":{"get":{"tags":["Banks"],"summary":"Get first one from filtered data","description":"","operationId":"findOneBanks","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Banks"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Banks/{BanksId}/exists":{"get":{"tags":["Banks"],"summary":"Check Banks with provided ID exists","description":"Returns a single Banks","operationId":"checkBanksExists","produces":["application/json"],"parameters":[{"name":"BanksId","in":"path","description":"ID of Banks to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/local_imoblo_m0h1/api/v1/Banks/count":{"get":{"tags":["Banks"],"summary":"Get Banks count","operationId":"getBanksCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Banks/groupby":{"get":{"tags":["Banks"],"summary":"Group by column","description":"","operationId":"BanksGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Banks"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Banks/distribution":{"get":{"tags":["Banks"],"summary":"","description":"","operationId":"BanksDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Banks/distinct":{"get":{"tags":["Banks"],"summary":"Get first one from filtered data","description":"","operationId":"BanksDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Banks/aggregate":{"get":{"tags":["Banks"],"summary":"Get first one from filtered data","description":"","operationId":"BanksAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Banks"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperLogs":{"post":{"tags":["DeveloperLogs"],"summary":"Add a new DeveloperLogs","description":"","operationId":"addDeveloperLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"DeveloperLogs object that needs to add","required":true,"schema":{"$ref":"#/definitions/DeveloperLogs"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["DeveloperLogs"],"summary":"Get list","description":"","operationId":"getDeveloperLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/DeveloperLogsNested"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperLogs/{DeveloperLogsId}":{"get":{"tags":["DeveloperLogs"],"summary":"Find DeveloperLogs by ID","description":"Returns a single DeveloperLogs","operationId":"getDeveloperLogsById","produces":["application/json"],"parameters":[{"name":"DeveloperLogsId","in":"path","description":"ID of DeveloperLogs to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/DeveloperLogsNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"DeveloperLogs not found"}}},"put":{"tags":["DeveloperLogs"],"summary":"Updates a DeveloperLogs","description":"","operationId":"updateDeveloperLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"DeveloperLogsId","in":"path","description":"ID of DeveloperLogs to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"DeveloperLogs object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/DeveloperLogs"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["DeveloperLogs"],"summary":"Deletes a DeveloperLogs","description":"","operationId":"deleteDeveloperLogs","produces":["application/json"],"parameters":[{"name":"DeveloperLogsId","in":"path","description":"ID of DeveloperLogs to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"DeveloperLogs not found"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperLogs/bulk":{"post":{"tags":["DeveloperLogs"],"summary":"Bulk DeveloperLogs insert","description":"","operationId":"bulkDeveloperLogsInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"DeveloperLogs objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/DeveloperLogs"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["DeveloperLogs"],"summary":"Updates a DeveloperLogs","description":"","operationId":"updateDeveloperLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"DeveloperLogs objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/DeveloperLogs"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["DeveloperLogs"],"summary":"Deletes a DeveloperLogs","description":"","operationId":"deleteDeveloperLogs","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"DeveloperLogs objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/DeveloperLogs"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"DeveloperLogs not found"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperLogs/findOne":{"get":{"tags":["DeveloperLogs"],"summary":"Get first one from filtered data","description":"","operationId":"findOneDeveloperLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/DeveloperLogs"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperLogs/{DeveloperLogsId}/exists":{"get":{"tags":["DeveloperLogs"],"summary":"Check DeveloperLogs with provided ID exists","description":"Returns a single DeveloperLogs","operationId":"checkDeveloperLogsExists","produces":["application/json"],"parameters":[{"name":"DeveloperLogsId","in":"path","description":"ID of DeveloperLogs to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperLogs/count":{"get":{"tags":["DeveloperLogs"],"summary":"Get DeveloperLogs count","operationId":"getDeveloperLogsCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperLogs/groupby":{"get":{"tags":["DeveloperLogs"],"summary":"Group by column","description":"","operationId":"DeveloperLogsGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/DeveloperLogs"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperLogs/distribution":{"get":{"tags":["DeveloperLogs"],"summary":"","description":"","operationId":"DeveloperLogsDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperLogs/distinct":{"get":{"tags":["DeveloperLogs"],"summary":"Get first one from filtered data","description":"","operationId":"DeveloperLogsDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperLogs/aggregate":{"get":{"tags":["DeveloperLogs"],"summary":"Get first one from filtered data","description":"","operationId":"DeveloperLogsAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/DeveloperLogs"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperStatuses":{"post":{"tags":["DeveloperStatuses"],"summary":"Add a new DeveloperStatuses","description":"","operationId":"addDeveloperStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"DeveloperStatuses object that needs to add","required":true,"schema":{"$ref":"#/definitions/DeveloperStatuses"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["DeveloperStatuses"],"summary":"Get list","description":"","operationId":"getDeveloperStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/DeveloperStatusesNested"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperStatuses/{DeveloperStatusesId}":{"get":{"tags":["DeveloperStatuses"],"summary":"Find DeveloperStatuses by ID","description":"Returns a single DeveloperStatuses","operationId":"getDeveloperStatusesById","produces":["application/json"],"parameters":[{"name":"DeveloperStatusesId","in":"path","description":"ID of DeveloperStatuses to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/DeveloperStatusesNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"DeveloperStatuses not found"}}},"put":{"tags":["DeveloperStatuses"],"summary":"Updates a DeveloperStatuses","description":"","operationId":"updateDeveloperStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"DeveloperStatusesId","in":"path","description":"ID of DeveloperStatuses to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"DeveloperStatuses object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/DeveloperStatuses"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["DeveloperStatuses"],"summary":"Deletes a DeveloperStatuses","description":"","operationId":"deleteDeveloperStatuses","produces":["application/json"],"parameters":[{"name":"DeveloperStatusesId","in":"path","description":"ID of DeveloperStatuses to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"DeveloperStatuses not found"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperStatuses/bulk":{"post":{"tags":["DeveloperStatuses"],"summary":"Bulk DeveloperStatuses insert","description":"","operationId":"bulkDeveloperStatusesInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"DeveloperStatuses objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/DeveloperStatuses"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["DeveloperStatuses"],"summary":"Updates a DeveloperStatuses","description":"","operationId":"updateDeveloperStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"DeveloperStatuses objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/DeveloperStatuses"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["DeveloperStatuses"],"summary":"Deletes a DeveloperStatuses","description":"","operationId":"deleteDeveloperStatuses","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"DeveloperStatuses objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/DeveloperStatuses"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"DeveloperStatuses not found"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperStatuses/findOne":{"get":{"tags":["DeveloperStatuses"],"summary":"Get first one from filtered data","description":"","operationId":"findOneDeveloperStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/DeveloperStatuses"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperStatuses/{DeveloperStatusesId}/exists":{"get":{"tags":["DeveloperStatuses"],"summary":"Check DeveloperStatuses with provided ID exists","description":"Returns a single DeveloperStatuses","operationId":"checkDeveloperStatusesExists","produces":["application/json"],"parameters":[{"name":"DeveloperStatusesId","in":"path","description":"ID of DeveloperStatuses to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperStatuses/count":{"get":{"tags":["DeveloperStatuses"],"summary":"Get DeveloperStatuses count","operationId":"getDeveloperStatusesCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperStatuses/groupby":{"get":{"tags":["DeveloperStatuses"],"summary":"Group by column","description":"","operationId":"DeveloperStatusesGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/DeveloperStatuses"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperStatuses/distribution":{"get":{"tags":["DeveloperStatuses"],"summary":"","description":"","operationId":"DeveloperStatusesDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperStatuses/distinct":{"get":{"tags":["DeveloperStatuses"],"summary":"Get first one from filtered data","description":"","operationId":"DeveloperStatusesDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/DeveloperStatuses/aggregate":{"get":{"tags":["DeveloperStatuses"],"summary":"Get first one from filtered data","description":"","operationId":"DeveloperStatusesAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/DeveloperStatuses"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Developers":{"post":{"tags":["Developers"],"summary":"Add a new Developers","description":"","operationId":"addDevelopers","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Developers object that needs to add","required":true,"schema":{"$ref":"#/definitions/Developers"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["Developers"],"summary":"Get list","description":"","operationId":"getDevelopers","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/DevelopersNested"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Developers/{DevelopersId}":{"get":{"tags":["Developers"],"summary":"Find Developers by ID","description":"Returns a single Developers","operationId":"getDevelopersById","produces":["application/json"],"parameters":[{"name":"DevelopersId","in":"path","description":"ID of Developers to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/DevelopersNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Developers not found"}}},"put":{"tags":["Developers"],"summary":"Updates a Developers","description":"","operationId":"updateDevelopers","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"DevelopersId","in":"path","description":"ID of Developers to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"Developers object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Developers"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["Developers"],"summary":"Deletes a Developers","description":"","operationId":"deleteDevelopers","produces":["application/json"],"parameters":[{"name":"DevelopersId","in":"path","description":"ID of Developers to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Developers not found"}}}},"/nc/local_imoblo_m0h1/api/v1/Developers/bulk":{"post":{"tags":["Developers"],"summary":"Bulk Developers insert","description":"","operationId":"bulkDevelopersInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Developers objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Developers"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["Developers"],"summary":"Updates a Developers","description":"","operationId":"updateDevelopers","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Developers objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Developers"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["Developers"],"summary":"Deletes a Developers","description":"","operationId":"deleteDevelopers","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Developers objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Developers"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Developers not found"}}}},"/nc/local_imoblo_m0h1/api/v1/Developers/findOne":{"get":{"tags":["Developers"],"summary":"Get first one from filtered data","description":"","operationId":"findOneDevelopers","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Developers"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Developers/{DevelopersId}/exists":{"get":{"tags":["Developers"],"summary":"Check Developers with provided ID exists","description":"Returns a single Developers","operationId":"checkDevelopersExists","produces":["application/json"],"parameters":[{"name":"DevelopersId","in":"path","description":"ID of Developers to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/local_imoblo_m0h1/api/v1/Developers/count":{"get":{"tags":["Developers"],"summary":"Get Developers count","operationId":"getDevelopersCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Developers/groupby":{"get":{"tags":["Developers"],"summary":"Group by column","description":"","operationId":"DevelopersGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Developers"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Developers/distribution":{"get":{"tags":["Developers"],"summary":"","description":"","operationId":"DevelopersDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Developers/distinct":{"get":{"tags":["Developers"],"summary":"Get first one from filtered data","description":"","operationId":"DevelopersDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Developers/aggregate":{"get":{"tags":["Developers"],"summary":"Get first one from filtered data","description":"","operationId":"DevelopersAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Developers"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Images":{"post":{"tags":["Images"],"summary":"Add a new Images","description":"","operationId":"addImages","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Images object that needs to add","required":true,"schema":{"$ref":"#/definitions/Images"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["Images"],"summary":"Get list","description":"","operationId":"getImages","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/ImagesNested"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Images/{ImagesId}":{"get":{"tags":["Images"],"summary":"Find Images by ID","description":"Returns a single Images","operationId":"getImagesById","produces":["application/json"],"parameters":[{"name":"ImagesId","in":"path","description":"ID of Images to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ImagesNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Images not found"}}},"put":{"tags":["Images"],"summary":"Updates a Images","description":"","operationId":"updateImages","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"ImagesId","in":"path","description":"ID of Images to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"Images object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Images"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["Images"],"summary":"Deletes a Images","description":"","operationId":"deleteImages","produces":["application/json"],"parameters":[{"name":"ImagesId","in":"path","description":"ID of Images to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Images not found"}}}},"/nc/local_imoblo_m0h1/api/v1/Images/bulk":{"post":{"tags":["Images"],"summary":"Bulk Images insert","description":"","operationId":"bulkImagesInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Images objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Images"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["Images"],"summary":"Updates a Images","description":"","operationId":"updateImages","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Images objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Images"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["Images"],"summary":"Deletes a Images","description":"","operationId":"deleteImages","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Images objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Images"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Images not found"}}}},"/nc/local_imoblo_m0h1/api/v1/Images/findOne":{"get":{"tags":["Images"],"summary":"Get first one from filtered data","description":"","operationId":"findOneImages","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Images"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Images/{ImagesId}/exists":{"get":{"tags":["Images"],"summary":"Check Images with provided ID exists","description":"Returns a single Images","operationId":"checkImagesExists","produces":["application/json"],"parameters":[{"name":"ImagesId","in":"path","description":"ID of Images to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/local_imoblo_m0h1/api/v1/Images/count":{"get":{"tags":["Images"],"summary":"Get Images count","operationId":"getImagesCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Images/groupby":{"get":{"tags":["Images"],"summary":"Group by column","description":"","operationId":"ImagesGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Images"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Images/distribution":{"get":{"tags":["Images"],"summary":"","description":"","operationId":"ImagesDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Images/distinct":{"get":{"tags":["Images"],"summary":"Get first one from filtered data","description":"","operationId":"ImagesDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Images/aggregate":{"get":{"tags":["Images"],"summary":"Get first one from filtered data","description":"","operationId":"ImagesAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Images"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentLogs":{"post":{"tags":["InvestmentLogs"],"summary":"Add a new InvestmentLogs","description":"","operationId":"addInvestmentLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"InvestmentLogs object that needs to add","required":true,"schema":{"$ref":"#/definitions/InvestmentLogs"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["InvestmentLogs"],"summary":"Get list","description":"","operationId":"getInvestmentLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/InvestmentLogsNested"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentLogs/{InvestmentLogsId}":{"get":{"tags":["InvestmentLogs"],"summary":"Find InvestmentLogs by ID","description":"Returns a single InvestmentLogs","operationId":"getInvestmentLogsById","produces":["application/json"],"parameters":[{"name":"InvestmentLogsId","in":"path","description":"ID of InvestmentLogs to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/InvestmentLogsNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"InvestmentLogs not found"}}},"put":{"tags":["InvestmentLogs"],"summary":"Updates a InvestmentLogs","description":"","operationId":"updateInvestmentLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"InvestmentLogsId","in":"path","description":"ID of InvestmentLogs to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"InvestmentLogs object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/InvestmentLogs"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["InvestmentLogs"],"summary":"Deletes a InvestmentLogs","description":"","operationId":"deleteInvestmentLogs","produces":["application/json"],"parameters":[{"name":"InvestmentLogsId","in":"path","description":"ID of InvestmentLogs to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"InvestmentLogs not found"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentLogs/bulk":{"post":{"tags":["InvestmentLogs"],"summary":"Bulk InvestmentLogs insert","description":"","operationId":"bulkInvestmentLogsInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"InvestmentLogs objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/InvestmentLogs"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["InvestmentLogs"],"summary":"Updates a InvestmentLogs","description":"","operationId":"updateInvestmentLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"InvestmentLogs objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/InvestmentLogs"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["InvestmentLogs"],"summary":"Deletes a InvestmentLogs","description":"","operationId":"deleteInvestmentLogs","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"InvestmentLogs objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/InvestmentLogs"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"InvestmentLogs not found"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentLogs/findOne":{"get":{"tags":["InvestmentLogs"],"summary":"Get first one from filtered data","description":"","operationId":"findOneInvestmentLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/InvestmentLogs"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentLogs/{InvestmentLogsId}/exists":{"get":{"tags":["InvestmentLogs"],"summary":"Check InvestmentLogs with provided ID exists","description":"Returns a single InvestmentLogs","operationId":"checkInvestmentLogsExists","produces":["application/json"],"parameters":[{"name":"InvestmentLogsId","in":"path","description":"ID of InvestmentLogs to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentLogs/count":{"get":{"tags":["InvestmentLogs"],"summary":"Get InvestmentLogs count","operationId":"getInvestmentLogsCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentLogs/groupby":{"get":{"tags":["InvestmentLogs"],"summary":"Group by column","description":"","operationId":"InvestmentLogsGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/InvestmentLogs"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentLogs/distribution":{"get":{"tags":["InvestmentLogs"],"summary":"","description":"","operationId":"InvestmentLogsDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentLogs/distinct":{"get":{"tags":["InvestmentLogs"],"summary":"Get first one from filtered data","description":"","operationId":"InvestmentLogsDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentLogs/aggregate":{"get":{"tags":["InvestmentLogs"],"summary":"Get first one from filtered data","description":"","operationId":"InvestmentLogsAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/InvestmentLogs"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentStatuses":{"post":{"tags":["InvestmentStatuses"],"summary":"Add a new InvestmentStatuses","description":"","operationId":"addInvestmentStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"InvestmentStatuses object that needs to add","required":true,"schema":{"$ref":"#/definitions/InvestmentStatuses"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["InvestmentStatuses"],"summary":"Get list","description":"","operationId":"getInvestmentStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/InvestmentStatusesNested"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentStatuses/{InvestmentStatusesId}":{"get":{"tags":["InvestmentStatuses"],"summary":"Find InvestmentStatuses by ID","description":"Returns a single InvestmentStatuses","operationId":"getInvestmentStatusesById","produces":["application/json"],"parameters":[{"name":"InvestmentStatusesId","in":"path","description":"ID of InvestmentStatuses to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/InvestmentStatusesNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"InvestmentStatuses not found"}}},"put":{"tags":["InvestmentStatuses"],"summary":"Updates a InvestmentStatuses","description":"","operationId":"updateInvestmentStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"InvestmentStatusesId","in":"path","description":"ID of InvestmentStatuses to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"InvestmentStatuses object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/InvestmentStatuses"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["InvestmentStatuses"],"summary":"Deletes a InvestmentStatuses","description":"","operationId":"deleteInvestmentStatuses","produces":["application/json"],"parameters":[{"name":"InvestmentStatusesId","in":"path","description":"ID of InvestmentStatuses to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"InvestmentStatuses not found"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentStatuses/bulk":{"post":{"tags":["InvestmentStatuses"],"summary":"Bulk InvestmentStatuses insert","description":"","operationId":"bulkInvestmentStatusesInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"InvestmentStatuses objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/InvestmentStatuses"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["InvestmentStatuses"],"summary":"Updates a InvestmentStatuses","description":"","operationId":"updateInvestmentStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"InvestmentStatuses objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/InvestmentStatuses"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["InvestmentStatuses"],"summary":"Deletes a InvestmentStatuses","description":"","operationId":"deleteInvestmentStatuses","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"InvestmentStatuses objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/InvestmentStatuses"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"InvestmentStatuses not found"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentStatuses/findOne":{"get":{"tags":["InvestmentStatuses"],"summary":"Get first one from filtered data","description":"","operationId":"findOneInvestmentStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/InvestmentStatuses"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentStatuses/{InvestmentStatusesId}/exists":{"get":{"tags":["InvestmentStatuses"],"summary":"Check InvestmentStatuses with provided ID exists","description":"Returns a single InvestmentStatuses","operationId":"checkInvestmentStatusesExists","produces":["application/json"],"parameters":[{"name":"InvestmentStatusesId","in":"path","description":"ID of InvestmentStatuses to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentStatuses/count":{"get":{"tags":["InvestmentStatuses"],"summary":"Get InvestmentStatuses count","operationId":"getInvestmentStatusesCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentStatuses/groupby":{"get":{"tags":["InvestmentStatuses"],"summary":"Group by column","description":"","operationId":"InvestmentStatusesGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/InvestmentStatuses"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentStatuses/distribution":{"get":{"tags":["InvestmentStatuses"],"summary":"","description":"","operationId":"InvestmentStatusesDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentStatuses/distinct":{"get":{"tags":["InvestmentStatuses"],"summary":"Get first one from filtered data","description":"","operationId":"InvestmentStatusesDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/InvestmentStatuses/aggregate":{"get":{"tags":["InvestmentStatuses"],"summary":"Get first one from filtered data","description":"","operationId":"InvestmentStatusesAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/InvestmentStatuses"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Investments":{"post":{"tags":["Investments"],"summary":"Add a new Investments","description":"","operationId":"addInvestments","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Investments object that needs to add","required":true,"schema":{"$ref":"#/definitions/Investments"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["Investments"],"summary":"Get list","description":"","operationId":"getInvestments","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/InvestmentsNested"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Investments/{InvestmentsId}":{"get":{"tags":["Investments"],"summary":"Find Investments by ID","description":"Returns a single Investments","operationId":"getInvestmentsById","produces":["application/json"],"parameters":[{"name":"InvestmentsId","in":"path","description":"ID of Investments to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/InvestmentsNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Investments not found"}}},"put":{"tags":["Investments"],"summary":"Updates a Investments","description":"","operationId":"updateInvestments","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"InvestmentsId","in":"path","description":"ID of Investments to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"Investments object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Investments"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["Investments"],"summary":"Deletes a Investments","description":"","operationId":"deleteInvestments","produces":["application/json"],"parameters":[{"name":"InvestmentsId","in":"path","description":"ID of Investments to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Investments not found"}}}},"/nc/local_imoblo_m0h1/api/v1/Investments/bulk":{"post":{"tags":["Investments"],"summary":"Bulk Investments insert","description":"","operationId":"bulkInvestmentsInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Investments objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Investments"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["Investments"],"summary":"Updates a Investments","description":"","operationId":"updateInvestments","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Investments objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Investments"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["Investments"],"summary":"Deletes a Investments","description":"","operationId":"deleteInvestments","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Investments objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Investments"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Investments not found"}}}},"/nc/local_imoblo_m0h1/api/v1/Investments/findOne":{"get":{"tags":["Investments"],"summary":"Get first one from filtered data","description":"","operationId":"findOneInvestments","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Investments"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Investments/{InvestmentsId}/exists":{"get":{"tags":["Investments"],"summary":"Check Investments with provided ID exists","description":"Returns a single Investments","operationId":"checkInvestmentsExists","produces":["application/json"],"parameters":[{"name":"InvestmentsId","in":"path","description":"ID of Investments to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/local_imoblo_m0h1/api/v1/Investments/count":{"get":{"tags":["Investments"],"summary":"Get Investments count","operationId":"getInvestmentsCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Investments/groupby":{"get":{"tags":["Investments"],"summary":"Group by column","description":"","operationId":"InvestmentsGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Investments"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Investments/distribution":{"get":{"tags":["Investments"],"summary":"","description":"","operationId":"InvestmentsDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Investments/distinct":{"get":{"tags":["Investments"],"summary":"Get first one from filtered data","description":"","operationId":"InvestmentsDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Investments/aggregate":{"get":{"tags":["Investments"],"summary":"Get first one from filtered data","description":"","operationId":"InvestmentsAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Investments"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectLogs":{"post":{"tags":["ProjectLogs"],"summary":"Add a new ProjectLogs","description":"","operationId":"addProjectLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"ProjectLogs object that needs to add","required":true,"schema":{"$ref":"#/definitions/ProjectLogs"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["ProjectLogs"],"summary":"Get list","description":"","operationId":"getProjectLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/ProjectLogsNested"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectLogs/{ProjectLogsId}":{"get":{"tags":["ProjectLogs"],"summary":"Find ProjectLogs by ID","description":"Returns a single ProjectLogs","operationId":"getProjectLogsById","produces":["application/json"],"parameters":[{"name":"ProjectLogsId","in":"path","description":"ID of ProjectLogs to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProjectLogsNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"ProjectLogs not found"}}},"put":{"tags":["ProjectLogs"],"summary":"Updates a ProjectLogs","description":"","operationId":"updateProjectLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"ProjectLogsId","in":"path","description":"ID of ProjectLogs to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"ProjectLogs object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/ProjectLogs"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["ProjectLogs"],"summary":"Deletes a ProjectLogs","description":"","operationId":"deleteProjectLogs","produces":["application/json"],"parameters":[{"name":"ProjectLogsId","in":"path","description":"ID of ProjectLogs to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"ProjectLogs not found"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectLogs/bulk":{"post":{"tags":["ProjectLogs"],"summary":"Bulk ProjectLogs insert","description":"","operationId":"bulkProjectLogsInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"ProjectLogs objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ProjectLogs"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["ProjectLogs"],"summary":"Updates a ProjectLogs","description":"","operationId":"updateProjectLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"ProjectLogs objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ProjectLogs"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["ProjectLogs"],"summary":"Deletes a ProjectLogs","description":"","operationId":"deleteProjectLogs","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"ProjectLogs objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ProjectLogs"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"ProjectLogs not found"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectLogs/findOne":{"get":{"tags":["ProjectLogs"],"summary":"Get first one from filtered data","description":"","operationId":"findOneProjectLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProjectLogs"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectLogs/{ProjectLogsId}/exists":{"get":{"tags":["ProjectLogs"],"summary":"Check ProjectLogs with provided ID exists","description":"Returns a single ProjectLogs","operationId":"checkProjectLogsExists","produces":["application/json"],"parameters":[{"name":"ProjectLogsId","in":"path","description":"ID of ProjectLogs to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectLogs/count":{"get":{"tags":["ProjectLogs"],"summary":"Get ProjectLogs count","operationId":"getProjectLogsCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectLogs/groupby":{"get":{"tags":["ProjectLogs"],"summary":"Group by column","description":"","operationId":"ProjectLogsGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProjectLogs"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectLogs/distribution":{"get":{"tags":["ProjectLogs"],"summary":"","description":"","operationId":"ProjectLogsDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectLogs/distinct":{"get":{"tags":["ProjectLogs"],"summary":"Get first one from filtered data","description":"","operationId":"ProjectLogsDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectLogs/aggregate":{"get":{"tags":["ProjectLogs"],"summary":"Get first one from filtered data","description":"","operationId":"ProjectLogsAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProjectLogs"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectStatuses":{"post":{"tags":["ProjectStatuses"],"summary":"Add a new ProjectStatuses","description":"","operationId":"addProjectStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"ProjectStatuses object that needs to add","required":true,"schema":{"$ref":"#/definitions/ProjectStatuses"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["ProjectStatuses"],"summary":"Get list","description":"","operationId":"getProjectStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/ProjectStatusesNested"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectStatuses/{ProjectStatusesId}":{"get":{"tags":["ProjectStatuses"],"summary":"Find ProjectStatuses by ID","description":"Returns a single ProjectStatuses","operationId":"getProjectStatusesById","produces":["application/json"],"parameters":[{"name":"ProjectStatusesId","in":"path","description":"ID of ProjectStatuses to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProjectStatusesNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"ProjectStatuses not found"}}},"put":{"tags":["ProjectStatuses"],"summary":"Updates a ProjectStatuses","description":"","operationId":"updateProjectStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"ProjectStatusesId","in":"path","description":"ID of ProjectStatuses to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"ProjectStatuses object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/ProjectStatuses"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["ProjectStatuses"],"summary":"Deletes a ProjectStatuses","description":"","operationId":"deleteProjectStatuses","produces":["application/json"],"parameters":[{"name":"ProjectStatusesId","in":"path","description":"ID of ProjectStatuses to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"ProjectStatuses not found"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectStatuses/bulk":{"post":{"tags":["ProjectStatuses"],"summary":"Bulk ProjectStatuses insert","description":"","operationId":"bulkProjectStatusesInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"ProjectStatuses objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ProjectStatuses"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["ProjectStatuses"],"summary":"Updates a ProjectStatuses","description":"","operationId":"updateProjectStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"ProjectStatuses objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ProjectStatuses"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["ProjectStatuses"],"summary":"Deletes a ProjectStatuses","description":"","operationId":"deleteProjectStatuses","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"ProjectStatuses objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ProjectStatuses"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"ProjectStatuses not found"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectStatuses/findOne":{"get":{"tags":["ProjectStatuses"],"summary":"Get first one from filtered data","description":"","operationId":"findOneProjectStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProjectStatuses"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectStatuses/{ProjectStatusesId}/exists":{"get":{"tags":["ProjectStatuses"],"summary":"Check ProjectStatuses with provided ID exists","description":"Returns a single ProjectStatuses","operationId":"checkProjectStatusesExists","produces":["application/json"],"parameters":[{"name":"ProjectStatusesId","in":"path","description":"ID of ProjectStatuses to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectStatuses/count":{"get":{"tags":["ProjectStatuses"],"summary":"Get ProjectStatuses count","operationId":"getProjectStatusesCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectStatuses/groupby":{"get":{"tags":["ProjectStatuses"],"summary":"Group by column","description":"","operationId":"ProjectStatusesGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProjectStatuses"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectStatuses/distribution":{"get":{"tags":["ProjectStatuses"],"summary":"","description":"","operationId":"ProjectStatusesDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectStatuses/distinct":{"get":{"tags":["ProjectStatuses"],"summary":"Get first one from filtered data","description":"","operationId":"ProjectStatusesDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/ProjectStatuses/aggregate":{"get":{"tags":["ProjectStatuses"],"summary":"Get first one from filtered data","description":"","operationId":"ProjectStatusesAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProjectStatuses"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Projects":{"post":{"tags":["Projects"],"summary":"Add a new Projects","description":"","operationId":"addProjects","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Projects object that needs to add","required":true,"schema":{"$ref":"#/definitions/Projects"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["Projects"],"summary":"Get list","description":"","operationId":"getProjects","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/ProjectsNested"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Projects/{ProjectsId}":{"get":{"tags":["Projects"],"summary":"Find Projects by ID","description":"Returns a single Projects","operationId":"getProjectsById","produces":["application/json"],"parameters":[{"name":"ProjectsId","in":"path","description":"ID of Projects to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ProjectsNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Projects not found"}}},"put":{"tags":["Projects"],"summary":"Updates a Projects","description":"","operationId":"updateProjects","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"ProjectsId","in":"path","description":"ID of Projects to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"Projects object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Projects"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["Projects"],"summary":"Deletes a Projects","description":"","operationId":"deleteProjects","produces":["application/json"],"parameters":[{"name":"ProjectsId","in":"path","description":"ID of Projects to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Projects not found"}}}},"/nc/local_imoblo_m0h1/api/v1/Projects/bulk":{"post":{"tags":["Projects"],"summary":"Bulk Projects insert","description":"","operationId":"bulkProjectsInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Projects objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Projects"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["Projects"],"summary":"Updates a Projects","description":"","operationId":"updateProjects","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Projects objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Projects"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["Projects"],"summary":"Deletes a Projects","description":"","operationId":"deleteProjects","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Projects objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Projects"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Projects not found"}}}},"/nc/local_imoblo_m0h1/api/v1/Projects/findOne":{"get":{"tags":["Projects"],"summary":"Get first one from filtered data","description":"","operationId":"findOneProjects","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Projects"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Projects/{ProjectsId}/exists":{"get":{"tags":["Projects"],"summary":"Check Projects with provided ID exists","description":"Returns a single Projects","operationId":"checkProjectsExists","produces":["application/json"],"parameters":[{"name":"ProjectsId","in":"path","description":"ID of Projects to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/local_imoblo_m0h1/api/v1/Projects/count":{"get":{"tags":["Projects"],"summary":"Get Projects count","operationId":"getProjectsCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Projects/groupby":{"get":{"tags":["Projects"],"summary":"Group by column","description":"","operationId":"ProjectsGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Projects"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Projects/distribution":{"get":{"tags":["Projects"],"summary":"","description":"","operationId":"ProjectsDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Projects/distinct":{"get":{"tags":["Projects"],"summary":"Get first one from filtered data","description":"","operationId":"ProjectsDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Projects/aggregate":{"get":{"tags":["Projects"],"summary":"Get first one from filtered data","description":"","operationId":"ProjectsAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Projects"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogins":{"post":{"tags":["UserLogins"],"summary":"Add a new UserLogins","description":"","operationId":"addUserLogins","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"UserLogins object that needs to add","required":true,"schema":{"$ref":"#/definitions/UserLogins"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["UserLogins"],"summary":"Get list","description":"","operationId":"getUserLogins","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/UserLoginsNested"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogins/{UserLoginsId}":{"get":{"tags":["UserLogins"],"summary":"Find UserLogins by ID","description":"Returns a single UserLogins","operationId":"getUserLoginsById","produces":["application/json"],"parameters":[{"name":"UserLoginsId","in":"path","description":"ID of UserLogins to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/UserLoginsNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"UserLogins not found"}}},"put":{"tags":["UserLogins"],"summary":"Updates a UserLogins","description":"","operationId":"updateUserLogins","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"UserLoginsId","in":"path","description":"ID of UserLogins to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"UserLogins object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/UserLogins"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["UserLogins"],"summary":"Deletes a UserLogins","description":"","operationId":"deleteUserLogins","produces":["application/json"],"parameters":[{"name":"UserLoginsId","in":"path","description":"ID of UserLogins to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"UserLogins not found"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogins/bulk":{"post":{"tags":["UserLogins"],"summary":"Bulk UserLogins insert","description":"","operationId":"bulkUserLoginsInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"UserLogins objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/UserLogins"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["UserLogins"],"summary":"Updates a UserLogins","description":"","operationId":"updateUserLogins","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"UserLogins objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/UserLogins"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["UserLogins"],"summary":"Deletes a UserLogins","description":"","operationId":"deleteUserLogins","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"UserLogins objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/UserLogins"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"UserLogins not found"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogins/findOne":{"get":{"tags":["UserLogins"],"summary":"Get first one from filtered data","description":"","operationId":"findOneUserLogins","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/UserLogins"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogins/{UserLoginsId}/exists":{"get":{"tags":["UserLogins"],"summary":"Check UserLogins with provided ID exists","description":"Returns a single UserLogins","operationId":"checkUserLoginsExists","produces":["application/json"],"parameters":[{"name":"UserLoginsId","in":"path","description":"ID of UserLogins to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogins/count":{"get":{"tags":["UserLogins"],"summary":"Get UserLogins count","operationId":"getUserLoginsCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogins/groupby":{"get":{"tags":["UserLogins"],"summary":"Group by column","description":"","operationId":"UserLoginsGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/UserLogins"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogins/distribution":{"get":{"tags":["UserLogins"],"summary":"","description":"","operationId":"UserLoginsDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogins/distinct":{"get":{"tags":["UserLogins"],"summary":"Get first one from filtered data","description":"","operationId":"UserLoginsDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogins/aggregate":{"get":{"tags":["UserLogins"],"summary":"Get first one from filtered data","description":"","operationId":"UserLoginsAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/UserLogins"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogs":{"post":{"tags":["UserLogs"],"summary":"Add a new UserLogs","description":"","operationId":"addUserLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"UserLogs object that needs to add","required":true,"schema":{"$ref":"#/definitions/UserLogs"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["UserLogs"],"summary":"Get list","description":"","operationId":"getUserLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/UserLogsNested"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogs/{UserLogsId}":{"get":{"tags":["UserLogs"],"summary":"Find UserLogs by ID","description":"Returns a single UserLogs","operationId":"getUserLogsById","produces":["application/json"],"parameters":[{"name":"UserLogsId","in":"path","description":"ID of UserLogs to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/UserLogsNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"UserLogs not found"}}},"put":{"tags":["UserLogs"],"summary":"Updates a UserLogs","description":"","operationId":"updateUserLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"UserLogsId","in":"path","description":"ID of UserLogs to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"UserLogs object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/UserLogs"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["UserLogs"],"summary":"Deletes a UserLogs","description":"","operationId":"deleteUserLogs","produces":["application/json"],"parameters":[{"name":"UserLogsId","in":"path","description":"ID of UserLogs to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"UserLogs not found"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogs/bulk":{"post":{"tags":["UserLogs"],"summary":"Bulk UserLogs insert","description":"","operationId":"bulkUserLogsInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"UserLogs objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/UserLogs"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["UserLogs"],"summary":"Updates a UserLogs","description":"","operationId":"updateUserLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"UserLogs objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/UserLogs"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["UserLogs"],"summary":"Deletes a UserLogs","description":"","operationId":"deleteUserLogs","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"UserLogs objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/UserLogs"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"UserLogs not found"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogs/findOne":{"get":{"tags":["UserLogs"],"summary":"Get first one from filtered data","description":"","operationId":"findOneUserLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/UserLogs"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogs/{UserLogsId}/exists":{"get":{"tags":["UserLogs"],"summary":"Check UserLogs with provided ID exists","description":"Returns a single UserLogs","operationId":"checkUserLogsExists","produces":["application/json"],"parameters":[{"name":"UserLogsId","in":"path","description":"ID of UserLogs to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogs/count":{"get":{"tags":["UserLogs"],"summary":"Get UserLogs count","operationId":"getUserLogsCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogs/groupby":{"get":{"tags":["UserLogs"],"summary":"Group by column","description":"","operationId":"UserLogsGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/UserLogs"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogs/distribution":{"get":{"tags":["UserLogs"],"summary":"","description":"","operationId":"UserLogsDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogs/distinct":{"get":{"tags":["UserLogs"],"summary":"Get first one from filtered data","description":"","operationId":"UserLogsDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserLogs/aggregate":{"get":{"tags":["UserLogs"],"summary":"Get first one from filtered data","description":"","operationId":"UserLogsAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/UserLogs"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserStatuses":{"post":{"tags":["UserStatuses"],"summary":"Add a new UserStatuses","description":"","operationId":"addUserStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"UserStatuses object that needs to add","required":true,"schema":{"$ref":"#/definitions/UserStatuses"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["UserStatuses"],"summary":"Get list","description":"","operationId":"getUserStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/UserStatusesNested"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserStatuses/{UserStatusesId}":{"get":{"tags":["UserStatuses"],"summary":"Find UserStatuses by ID","description":"Returns a single UserStatuses","operationId":"getUserStatusesById","produces":["application/json"],"parameters":[{"name":"UserStatusesId","in":"path","description":"ID of UserStatuses to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/UserStatusesNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"UserStatuses not found"}}},"put":{"tags":["UserStatuses"],"summary":"Updates a UserStatuses","description":"","operationId":"updateUserStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"UserStatusesId","in":"path","description":"ID of UserStatuses to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"UserStatuses object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/UserStatuses"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["UserStatuses"],"summary":"Deletes a UserStatuses","description":"","operationId":"deleteUserStatuses","produces":["application/json"],"parameters":[{"name":"UserStatusesId","in":"path","description":"ID of UserStatuses to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"UserStatuses not found"}}}},"/nc/local_imoblo_m0h1/api/v1/UserStatuses/bulk":{"post":{"tags":["UserStatuses"],"summary":"Bulk UserStatuses insert","description":"","operationId":"bulkUserStatusesInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"UserStatuses objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/UserStatuses"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["UserStatuses"],"summary":"Updates a UserStatuses","description":"","operationId":"updateUserStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"UserStatuses objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/UserStatuses"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["UserStatuses"],"summary":"Deletes a UserStatuses","description":"","operationId":"deleteUserStatuses","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"UserStatuses objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/UserStatuses"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"UserStatuses not found"}}}},"/nc/local_imoblo_m0h1/api/v1/UserStatuses/findOne":{"get":{"tags":["UserStatuses"],"summary":"Get first one from filtered data","description":"","operationId":"findOneUserStatuses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/UserStatuses"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserStatuses/{UserStatusesId}/exists":{"get":{"tags":["UserStatuses"],"summary":"Check UserStatuses with provided ID exists","description":"Returns a single UserStatuses","operationId":"checkUserStatusesExists","produces":["application/json"],"parameters":[{"name":"UserStatusesId","in":"path","description":"ID of UserStatuses to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/local_imoblo_m0h1/api/v1/UserStatuses/count":{"get":{"tags":["UserStatuses"],"summary":"Get UserStatuses count","operationId":"getUserStatusesCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserStatuses/groupby":{"get":{"tags":["UserStatuses"],"summary":"Group by column","description":"","operationId":"UserStatusesGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/UserStatuses"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserStatuses/distribution":{"get":{"tags":["UserStatuses"],"summary":"","description":"","operationId":"UserStatusesDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserStatuses/distinct":{"get":{"tags":["UserStatuses"],"summary":"Get first one from filtered data","description":"","operationId":"UserStatusesDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/UserStatuses/aggregate":{"get":{"tags":["UserStatuses"],"summary":"Get first one from filtered data","description":"","operationId":"UserStatusesAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/UserStatuses"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Users":{"post":{"tags":["Users"],"summary":"Add a new Users","description":"","operationId":"addUsers","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Users object that needs to add","required":true,"schema":{"$ref":"#/definitions/Users"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["Users"],"summary":"Get list","description":"","operationId":"getUsers","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/UsersNested"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Users/{UsersId}":{"get":{"tags":["Users"],"summary":"Find Users by ID","description":"Returns a single Users","operationId":"getUsersById","produces":["application/json"],"parameters":[{"name":"UsersId","in":"path","description":"ID of Users to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/UsersNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Users not found"}}},"put":{"tags":["Users"],"summary":"Updates a Users","description":"","operationId":"updateUsers","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"UsersId","in":"path","description":"ID of Users to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"Users object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Users"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["Users"],"summary":"Deletes a Users","description":"","operationId":"deleteUsers","produces":["application/json"],"parameters":[{"name":"UsersId","in":"path","description":"ID of Users to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Users not found"}}}},"/nc/local_imoblo_m0h1/api/v1/Users/bulk":{"post":{"tags":["Users"],"summary":"Bulk Users insert","description":"","operationId":"bulkUsersInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Users objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Users"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["Users"],"summary":"Updates a Users","description":"","operationId":"updateUsers","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Users objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Users"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["Users"],"summary":"Deletes a Users","description":"","operationId":"deleteUsers","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Users objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Users"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Users not found"}}}},"/nc/local_imoblo_m0h1/api/v1/Users/findOne":{"get":{"tags":["Users"],"summary":"Get first one from filtered data","description":"","operationId":"findOneUsers","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Users"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Users/{UsersId}/exists":{"get":{"tags":["Users"],"summary":"Check Users with provided ID exists","description":"Returns a single Users","operationId":"checkUsersExists","produces":["application/json"],"parameters":[{"name":"UsersId","in":"path","description":"ID of Users to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/local_imoblo_m0h1/api/v1/Users/count":{"get":{"tags":["Users"],"summary":"Get Users count","operationId":"getUsersCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Users/groupby":{"get":{"tags":["Users"],"summary":"Group by column","description":"","operationId":"UsersGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Users"}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Users/distribution":{"get":{"tags":["Users"],"summary":"","description":"","operationId":"UsersDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Users/distinct":{"get":{"tags":["Users"],"summary":"Get first one from filtered data","description":"","operationId":"UsersDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/local_imoblo_m0h1/api/v1/Users/aggregate":{"get":{"tags":["Users"],"summary":"Get first one from filtered data","description":"","operationId":"UsersAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Users"}},"405":{"description":"Invalid input"}}}}},"definitions":{"Admins":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"FirstName":{},"LastName":{},"Email":{},"Password":{},"LastLogin":{},"Created":{},"Modified":{},"Status":{},"Username":{}}},"AdminsNested":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"FirstName":{},"LastName":{},"Email":{},"Password":{},"LastLogin":{},"Created":{},"Modified":{},"Status":{},"Username":{}}},"Banks":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"Code":{},"Name":{}}},"BanksNested":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"Code":{},"Name":{}}},"DeveloperLogs":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"DeveloperId":{},"Date":{},"Ip":{},"Action":{},"ActionBy":{},"Extra":{}}},"DeveloperLogsNested":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"DeveloperId":{},"Date":{},"Ip":{},"Action":{},"ActionBy":{},"Extra":{}}},"DeveloperStatuses":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"Name":{},"Slug":{},"Info":{},"Created":{},"Modified":{}}},"DeveloperStatusesNested":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"Name":{},"Slug":{},"Info":{},"Created":{},"Modified":{}}},"Developers":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"Nombre":{},"Sigla":{},"Sociedad":{},"TipoDocumento":{},"NumeroDocumento":{},"FechaConstitucion":{},"NaturalezaEmpresa":{},"NumeroEmpleados":{},"Ciudad":{},"Pais":{},"CodigoCiiu":{},"Direccion":{},"Telefono1":{},"Telefono2":{},"Email":{},"Web":{},"VentasAnuales":{},"ActivosTotales":{},"OtrosIngresos":{},"EgresosMensuales":{},"PasivosTotales":{},"PatrimonioLiquido":{},"UtilidadNeta":{},"Image":{},"EpaycoPCustIdCliente":{},"EpaycoPKey":{},"EpaycoPublicKey":{},"EpaycoPrivateKey":{},"EpaycoId":{},"EpaycoReglaId":{},"Logo":{},"Password":{},"Created":{},"Modified":{},"UserStatusId":{}}},"DevelopersNested":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"Nombre":{},"Sigla":{},"Sociedad":{},"TipoDocumento":{},"NumeroDocumento":{},"FechaConstitucion":{},"NaturalezaEmpresa":{},"NumeroEmpleados":{},"Ciudad":{},"Pais":{},"CodigoCiiu":{},"Direccion":{},"Telefono1":{},"Telefono2":{},"Email":{},"Web":{},"VentasAnuales":{},"ActivosTotales":{},"OtrosIngresos":{},"EgresosMensuales":{},"PasivosTotales":{},"PatrimonioLiquido":{},"UtilidadNeta":{},"Image":{},"EpaycoPCustIdCliente":{},"EpaycoPKey":{},"EpaycoPublicKey":{},"EpaycoPrivateKey":{},"EpaycoId":{},"EpaycoReglaId":{},"Logo":{},"Password":{},"Created":{},"Modified":{},"UserStatusId":{}}},"Images":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"ProjectId":{},"Title":{},"Url":{},"Ext":{},"Info":{},"Sequence":{},"Copyright":{},"Created":{},"Modified":{},"Type":{}}},"ImagesNested":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"ProjectId":{},"Title":{},"Url":{},"Ext":{},"Info":{},"Sequence":{},"Copyright":{},"Created":{},"Modified":{},"Type":{}}},"InvestmentLogs":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"ProjectId":{},"UserId":{},"InvestmentId":{},"InvestmentStatusId":{},"Date":{},"Ip":{},"Action":{},"ActionBy":{},"Extra":{},"Url":{}}},"InvestmentLogsNested":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"ProjectId":{},"UserId":{},"InvestmentId":{},"InvestmentStatusId":{},"Date":{},"Ip":{},"Action":{},"ActionBy":{},"Extra":{},"Url":{}}},"InvestmentStatuses":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"Name":{},"Slug":{},"Info":{},"Created":{},"Modified":{},"Badge":{"nullable":false},"Sequence":{"nullable":false}}},"InvestmentStatusesNested":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"Name":{},"Slug":{},"Info":{},"Created":{},"Modified":{},"Badge":{"nullable":false},"Sequence":{"nullable":false}}},"Investments":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"Total":{},"Created":{},"Modified":{},"UserId":{"nullable":false},"ProjectId":{"nullable":false},"Comision":{},"InvestmentStatusId":{"nullable":false},"ContratoMandato":{},"RefPayco":{},"EpaycoTransactionId":{},"ContratoFiduciario":{}}},"InvestmentsNested":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"Total":{},"Created":{},"Modified":{},"UserId":{"nullable":false},"ProjectId":{"nullable":false},"Comision":{},"InvestmentStatusId":{"nullable":false},"ContratoMandato":{},"RefPayco":{},"EpaycoTransactionId":{},"ContratoFiduciario":{}}},"ProjectLogs":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"ProjectId":{},"UserId":{},"InvestmentId":{},"Date":{},"Ip":{},"Action":{},"ActionBy":{},"Extra":{},"ProjectStatusId":{},"Url":{}}},"ProjectLogsNested":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"ProjectId":{},"UserId":{},"InvestmentId":{},"Date":{},"Ip":{},"Action":{},"ActionBy":{},"Extra":{},"ProjectStatusId":{},"Url":{}}},"ProjectStatuses":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"Name":{},"Slug":{},"Info":{},"Created":{},"Modified":{},"Badge":{"nullable":false}}},"ProjectStatusesNested":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"Name":{},"Slug":{},"Info":{},"Created":{},"Modified":{},"Badge":{"nullable":false}}},"Projects":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"Nombre":{},"TasaAnual":{},"Plazo":{},"Comision":{},"InversionMinima":{},"Resumen":{},"FechaCierre":{},"DeveloperId":{},"Total":{"nullable":false},"Coordenadas":{},"Ciudad":{},"Direccion":{},"PuntosFavorables":{},"TipoPropiedad":{},"RentabilidadBruta":{},"FechaLiquidacion":{},"FechaDesembolso":{},"ResumenInversion":{},"ProjectStatusId":{"nullable":false},"TasaRango":{},"LicenciaConstruccion":{},"PermisoVentas":{},"Brochure":{},"ContratoMandato":{},"Tyc":{},"TiempoConservador":{},"TiempoModerado":{},"TiempoIdeal":{},"RentabilidadConservador":{},"RentabilidadModerado":{},"RentabilidadIdeal":{},"Web":{},"PromesaUrl":{},"Agrupacion":{},"AvanceComentarios":{},"AvanceCimentacion":{"nullable":false},"AvanceEstructura":{"nullable":false},"AvanceObraNegra":{"nullable":false},"AvanceObraBlanca":{"nullable":false},"AvanceEntrega":{"nullable":false},"AvancePago":{"nullable":false},"Fiduciaria":{"nullable":false},"ContratoFiduciarioNatural":{},"ContratoFiduciarioJuridica":{}}},"ProjectsNested":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"Nombre":{},"TasaAnual":{},"Plazo":{},"Comision":{},"InversionMinima":{},"Resumen":{},"FechaCierre":{},"DeveloperId":{},"Total":{"nullable":false},"Coordenadas":{},"Ciudad":{},"Direccion":{},"PuntosFavorables":{},"TipoPropiedad":{},"RentabilidadBruta":{},"FechaLiquidacion":{},"FechaDesembolso":{},"ResumenInversion":{},"ProjectStatusId":{"nullable":false},"TasaRango":{},"LicenciaConstruccion":{},"PermisoVentas":{},"Brochure":{},"ContratoMandato":{},"Tyc":{},"TiempoConservador":{},"TiempoModerado":{},"TiempoIdeal":{},"RentabilidadConservador":{},"RentabilidadModerado":{},"RentabilidadIdeal":{},"Web":{},"PromesaUrl":{},"Agrupacion":{},"AvanceComentarios":{},"AvanceCimentacion":{"nullable":false},"AvanceEstructura":{"nullable":false},"AvanceObraNegra":{"nullable":false},"AvanceObraBlanca":{"nullable":false},"AvanceEntrega":{"nullable":false},"AvancePago":{"nullable":false},"Fiduciaria":{"nullable":false},"ContratoFiduciarioNatural":{},"ContratoFiduciarioJuridica":{}}},"UserLogins":{"type":"object","properties":{"Id":{"nullable":false},"UserId":{},"Device":{},"Location":{},"Datetime":{},"Browser":{},"Jwt":{}}},"UserLoginsNested":{"type":"object","properties":{"Id":{"nullable":false},"UserId":{},"Device":{},"Location":{},"Datetime":{},"Browser":{},"Jwt":{}}},"UserLogs":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"UserId":{},"Date":{},"Ip":{},"Action":{},"ActionBy":{},"Extra":{},"UserStatusId":{},"Url":{}}},"UserLogsNested":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"UserId":{},"Date":{},"Ip":{},"Action":{},"ActionBy":{},"Extra":{},"UserStatusId":{},"Url":{}}},"UserStatuses":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"Name":{},"Slug":{},"Info":{},"Created":{},"Modified":{},"Badge":{"nullable":false}}},"UserStatusesNested":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"Name":{},"Slug":{},"Info":{},"Created":{},"Modified":{},"Badge":{"nullable":false}}},"Users":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"FirstName":{},"LastName":{},"Email":{},"Password":{},"Genero":{},"Riesgo":{},"EstadoCivil":{},"TipoDocumento":{},"NumeroDocumento":{},"LugarExpedicion":{},"FechaNacimiento":{},"Nacionalidad":{},"Pais":{},"Ciudad":{},"Direccion":{},"Telefono1":{},"Telefono2":{},"Profesion":{},"Empresa":{},"Banco":{},"BancoCuenta":{},"BancoTipoCuenta":{},"Created":{},"Modified":{},"NivelEducacion":{},"Ocupacion":{},"Empleador":{},"TipoMembresia":{},"TelefonoIndicativo":{},"SocialFacebook":{},"SocialTwitter":{},"SocialLinkedin":{},"SocialInstagram":{},"ProfileComplete":{},"RazonSocial":{},"RepresentanteLegal":{},"RepresentanteLegalId":{},"EntryCode":{},"TypePerson":{},"ResetToken":{},"UserStatusId":{"nullable":false},"LastName2":{},"Referenciacion":{},"FechaExpedicionDoc":{},"DepartamentoNacimiento":{},"Activos":{},"Pasivos":{},"Patrimonio":{},"IngresosMensuales":{},"EgresosMensuales":{},"OrigenFondos":{},"VersionTyc":{},"CiudadNacimiento":{},"DeclaracionOrigen":{},"PaisRecursos":{},"PersonaPep":{},"RecursosPublicos":{},"FamiliaPublico":{},"ParentescoPublico":{},"PersonalFull":{},"ContactoFull":{},"ProfesionalFull":{},"BancarioFull":{},"FinancieroFull":{},"PepFull":{},"DocumentoIdentidad":{},"DocumentoIdentidadStatus":{"nullable":false},"DocumentoConduccion":{},"DocumentoConduccionStatus":{"nullable":false},"DocumentoRut":{},"DocumentoRutStatus":{"nullable":false},"DocumentoIngresos1":{},"DocumentoIngresos1Status":{"nullable":false},"DocumentoIngresos2":{},"DocumentoIngresos2Status":{"nullable":false},"DocumentoCertificacionBancaria":{},"DocumentoCertificacionBancariaStatus":{"nullable":false},"DocumentoComposicionAccionaria":{},"DocumentoComposicionAccionariaStatus":{},"DocumentoEstadosFinancieros":{},"DocumentoEstadosFinancierosStatus":{},"DocumentoCamaraComercio":{},"DocumentoCamaraComercioStatus":{"nullable":false},"DocumentoResolucionPension":{},"DocumentoExtractoBancarioIndependiente":{},"DocumentoCertificadoContadorIndependiente":{},"DocumentoCertificacionLaboral":{},"DocumentoResolucionPensionStatus":{"nullable":false},"DocumentoExtractoBancarioIndependienteStatus":{"nullable":false},"DocumentoCertificadoContadorIndependienteStatus":{"nullable":false},"DocumentoCertificacionLaboralStatus":{"nullable":false}}},"UsersNested":{"type":"object","properties":{"Id":{"nullable":false,"readOnly":true},"FirstName":{},"LastName":{},"Email":{},"Password":{},"Genero":{},"Riesgo":{},"EstadoCivil":{},"TipoDocumento":{},"NumeroDocumento":{},"LugarExpedicion":{},"FechaNacimiento":{},"Nacionalidad":{},"Pais":{},"Ciudad":{},"Direccion":{},"Telefono1":{},"Telefono2":{},"Profesion":{},"Empresa":{},"Banco":{},"BancoCuenta":{},"BancoTipoCuenta":{},"Created":{},"Modified":{},"NivelEducacion":{},"Ocupacion":{},"Empleador":{},"TipoMembresia":{},"TelefonoIndicativo":{},"SocialFacebook":{},"SocialTwitter":{},"SocialLinkedin":{},"SocialInstagram":{},"ProfileComplete":{},"RazonSocial":{},"RepresentanteLegal":{},"RepresentanteLegalId":{},"EntryCode":{},"TypePerson":{},"ResetToken":{},"UserStatusId":{"nullable":false},"LastName2":{},"Referenciacion":{},"FechaExpedicionDoc":{},"DepartamentoNacimiento":{},"Activos":{},"Pasivos":{},"Patrimonio":{},"IngresosMensuales":{},"EgresosMensuales":{},"OrigenFondos":{},"VersionTyc":{},"CiudadNacimiento":{},"DeclaracionOrigen":{},"PaisRecursos":{},"PersonaPep":{},"RecursosPublicos":{},"FamiliaPublico":{},"ParentescoPublico":{},"PersonalFull":{},"ContactoFull":{},"ProfesionalFull":{},"BancarioFull":{},"FinancieroFull":{},"PepFull":{},"DocumentoIdentidad":{},"DocumentoIdentidadStatus":{"nullable":false},"DocumentoConduccion":{},"DocumentoConduccionStatus":{"nullable":false},"DocumentoRut":{},"DocumentoRutStatus":{"nullable":false},"DocumentoIngresos1":{},"DocumentoIngresos1Status":{"nullable":false},"DocumentoIngresos2":{},"DocumentoIngresos2Status":{"nullable":false},"DocumentoCertificacionBancaria":{},"DocumentoCertificacionBancariaStatus":{"nullable":false},"DocumentoComposicionAccionaria":{},"DocumentoComposicionAccionariaStatus":{},"DocumentoEstadosFinancieros":{},"DocumentoEstadosFinancierosStatus":{},"DocumentoCamaraComercio":{},"DocumentoCamaraComercioStatus":{"nullable":false},"DocumentoResolucionPension":{},"DocumentoExtractoBancarioIndependiente":{},"DocumentoCertificadoContadorIndependiente":{},"DocumentoCertificacionLaboral":{},"DocumentoResolucionPensionStatus":{"nullable":false},"DocumentoExtractoBancarioIndependienteStatus":{"nullable":false},"DocumentoCertificadoContadorIndependienteStatus":{"nullable":false},"DocumentoCertificacionLaboralStatus":{"nullable":false}}}}}